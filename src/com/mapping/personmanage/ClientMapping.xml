<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.personmanage.ClientMapper" >
  <resultMap id="BaseResultMap" type="com.po.Client" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="INTEGER" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="idcard" property="idcard" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="phonenumber1" property="phonenumber1" jdbcType="VARCHAR" />
    <result column="phonenumber2" property="phonenumber2" jdbcType="VARCHAR" />   
    <result column="company" property="company" jdbcType="VARCHAR" />
    <result column="position" property="position" jdbcType="VARCHAR" /> 
    <result column="isvalid" property="isvalid" jdbcType="INTEGER"/>   
  </resultMap>
  <sql id="Base_Column_List" >
    id, account, name, gender, password, idcard, email, phonenumber1,phonenumber2, company, position,isvalid
  </sql>
  
  <!-- 分页模糊查询 -->
  <select id="vagueFind" resultType="com.po.Client">
  	SELECT * FROM client WHERE isvalid=1 AND (LOCATE(#{contant,jdbcType=VARCHAR},account)
  	OR LOCATE(#{contant,jdbcType=VARCHAR},name))
  	<if test="currentpage==0">
		limit 0, #{pagesize,jdbcType=INTEGER}
	</if>
	<if test="currentpage&gt;0">
		limit ${(currentpage-1)*pagesize},${pagesize}
	</if>
  </select>
  <select id="findAll" resultMap="BaseResultMap">
  	SELECT * FROM client WHERE isvalid=1
  </select>
  <update id="delete" parameterType="java.lang.Integer">
  	UPDATE client SET isvalid=2 WHERE id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from client
    where id = #{id,jdbcType=INTEGER}
  </select>
  <insert id="insert" parameterType="com.po.Client" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into client (account, name, gender, password, idcard, email, phonenumber1,phonenumber2, company, position,isvalid
      )
    values (#{account,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, 
       #{password,jdbcType=VARCHAR},#{idcard,jdbcType=VARCHAR},#{email,jdbcType=VARCHAR},
        #{phonenumber1,jdbcType=VARCHAR}, #{phonenumber2,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR},#{position,jdbcType=INTEGER},#{isvalid,jdbcType=INTEGER}
      )
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.po.Client" >
    update client
    <set >
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber1 != null" >
        phonenumber1 = #{phonenumber1,jdbcType=VARCHAR},
      </if>      
      <if test="phonenumber2 != null" >
        phonenumber2 = #{phonenumber2,jdbcType=VARCHAR},
      </if>      
      <if test="company != null" >
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="position != null" >
        position = #{position,jdbcType=VARCHAR},
      </if>
       <if test="isvalid != null" >
        isvalid = #{isvalid,jdbcType=VARCHAR},
      </if>      
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>